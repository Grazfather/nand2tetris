// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static Array kb;

    /** Initializes the keyboard. */
    function void init() {
        let kb = 24576;
        return;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return kb[0];
    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {
        var char c;
        let c = 0;
        // Display cursor
        do Output.printChar(0);
        // Wait for press
        while (c = 0) {
            let c = kb[0];
        }

        // Wait for release
        while (~(kb[0] = 0)) {
        }

        // Output press
        do Output.backSpace(); // Erase cursor
        do Output.printChar(c);

        return c;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var char c;
        var String s;

        do Output.printString(message);
        let s = String.new(32);
        let c = Keyboard.readChar();
        while (~(c = 128)) {
            if (c = 129) { // Backspace
                do s.eraseLastChar();
            } else {
                do s.appendChar(c);
            }
            let c = Keyboard.readChar();
        }
        do Output.println();
        return s;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
        var int v;
        var char c;
        var boolean neg;

        do Output.printString(message);
        let v = 0;

        // Special handling of first character: It can be a '-'
        let c = Keyboard.readChar();
        if (c = 45) {
            let neg = true;
        } else {
            let neg = false;
            if ((c > 47) & (c < 58)) {
                let v = (c - 48);
            } else {
                return 0;
            }
        }

        let c = Keyboard.readChar();
        while (~(c = 128) & ((c > 47) & (c < 58)) | (c = 129)) {
            if (c = 129) { // Backspace
                if (v = 0) { // If the value was 0, assume we are deleting a minus sign
                    let neg = false; // This isn't perfect, but good enough
                }
                let v = v/10;
            } else {
                let v = (v * 10) + (c - 48);
            }
            let c = Keyboard.readChar();
        }

        if (neg) {
            return -v;
        } else {
            return v;
        }
    }
}

class Display {
    static Display instance;   // Display instance
    static int NUM_FRACTALS;   // Constant
    static int MAX_LEVEL;      // Constant
    field int fractal;         // Which fractal to display
    field int level;           // Level of recursion
    field boolean exit;        // True until told to quit

    constructor Display new() {
	    do Screen.clearScreen();
        let fractal = 0;
        let level = 1;
        let exit = false;
        let NUM_FRACTALS = 3;
        let MAX_LEVEL = 7;

        // TODO: Init each fractal's hidden state

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        // TODO: Remove strings and each fractal
        do Memory.deAlloc(this);
        return;
    }

    method void run() {
        var char key;

        while (~exit) {
            // Draw current fractal at current level
            do Screen.clearScreen();
            if (fractal = 0) {
                do Sierpinski.draw(level);
            } else {
                if (fractal = 1) {
                    do Dragon.draw(level);
                } else {
                    if (fractal = 2) {
                        do Koch.draw(level);
                    }
                }
            }

            // Print menu and settings
            do printMenu();
            // waits for a key to be pressed.
            while ((key = 0) & (~exit)) {
                let key = Keyboard.keyPressed();
            }

            // Arrow keys: Up/Down: Increase/decrease level
            //             Left/right: Cycle through fractals
            // Escape: Quit
            if (key = 130) { // Left arrow
                let fractal = fractal - 1;
                // Don't let fractal go out of range
                if (fractal < 0) {
                    let fractal = 0;
                }
            } else {
	            if (key = 132) { // Right arrow
                    let fractal = fractal + 1;
                    // Don't let fractal go out of range
                    if (fractal = NUM_FRACTALS) {
                            let fractal = NUM_FRACTALS - 1;
                    }
		        } else {
                    if (key = 131) { // Up arrow
                        let level = level + 1;
                        if (level = (MAX_LEVEL + 1)) {
                            let level = MAX_LEVEL;
                        }
                    } else {
                        if (key = 133) { // Down arrow
                            let level = level - 1;
                            if (level = 0) {
                                let level = 1;
                            }
                        } else {
                            if (key = 140) { let exit = true; }
                        }
                    }
		        }
            }
            // Waits for the key to be released.
            while ((~(key = 0)) & (~exit)) {
                let key = Keyboard.keyPressed();
            }
        }

	    if (exit) {
            do Output.moveCursor(10,27);
	        do Output.printString("Goodbye");
	    }

        return;
    }

    method void printMenu() {
        do Output.moveCursor(0, 0);
        do Output.printString("Fractals!");
        do Output.println();
        do Output.printString("Up/Down to change level");
        do Output.println();
        do Output.printString("<-/-> to cycle fractal");
        do Output.println();
        do Output.printString("By Graziano Misuraca");
        do Output.println();
        do Output.printString("Fractal: ");
        do Output.printInt(fractal);
        do Output.println();
        do Output.printString("Level: ");
        do Output.printInt(level);
        do Output.println();
        do Output.println();
        do Output.printString("0: Sierpinski");
        do Output.println();
        do Output.printString("1: Dragon");
        do Output.println();
        do Output.printString("2: Quadratic Koch");
        do Output.println();
        return;
    }
}
